contract Ownable =
	record state = {
		owner : address}

	public stateful function init() = {
		owner = Call.caller
		}

	public function owner() : address = state.owner

	public function onlyOwner() : bool =
		require(state.owner == Call.caller, "The caller is different than the owner")

		true

	public function isOwner(): bool =
		state.owner == Call.caller

	public stateful function renounceOwnership() =
		onlyOwner()
		put(state{ owner = #0 })

	public function transferOwnership(newOwner: address) =
		onlyOwner()
		_transferOwnership(newOwner)

	internal stateful function _transferOwnership(newOwner: address) =
		require(newOwner != #0, "The address of the new owner must be different than #0 ")
			
		put(state{owner = newOwner})

	private function abort(err) = abort(err)

 	private function require(b : bool, err : string) =
  		if(!b) abort(err)